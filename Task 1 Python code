# 1. Import Libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error

# 2. Load Dataset
df = pd.read_csv('path/to/housing_dataset.csv')  # Update path accordingly

# 3. Data Preprocessing
# Handling missing values (simple imputation in this example)
df.fillna(df.mean(), inplace=True)

# Extracting features and target variable
X = df[['square_footage', 'number_of_bedrooms']]  # Update feature names as per dataset
y = df['price']  # Update target variable name as per dataset

# 4. Feature Scaling
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 5. Split Dataset
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# 6. Model Training
# Option 1: Linear Regression
model = LinearRegression()
# Option 2: Decision Tree Regressor
# model = DecisionTreeRegressor()

model.fit(X_train, y_train)

# 7. Model Evaluation
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# 8. Result
# The MSE provides an indication of how well the model is performing.
